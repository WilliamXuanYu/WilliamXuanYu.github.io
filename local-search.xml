<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>多项式特征的二分类次数确定问题</title>
    <link href="/2023/01/06/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%89%B9%E5%BE%81%E7%9A%84%E4%BA%8C%E5%88%86%E7%B1%BB%E6%AC%A1%E6%95%B0%E7%A1%AE%E5%AE%9A%E9%97%AE%E9%A2%98/"/>
    <url>/2023/01/06/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%89%B9%E5%BE%81%E7%9A%84%E4%BA%8C%E5%88%86%E7%B1%BB%E6%AC%A1%E6%95%B0%E7%A1%AE%E5%AE%9A%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<blockquote><p><strong>问题描述：</strong><br>已知六个特征（记作$X_1,X_2…X_6$），取值为（-2,2），均值接近0（约-0.01），方差接近1（约1.15），设有函数$Y=a_0+a_1X^{b_1}_1+a_2X_2^{b_2}+…+a_6X_6^{b_6}$（假设最高项次数小于10），对Y做Sigmoid(Y)函数处理，输出为0/1（二分类），现有1000个样本（Train.txt：900作为训练集，100作为测试集），求矩阵a和b<br>限制：不使用神经网络和深度学习，主要支撑库为numpy</p></blockquote><p>$Sigmoid(Z)=\frac{1}{1+e^{-Z}}$</p><blockquote><p>实际结果：指数依次为0 4 2 3 1 5 6(第一个0为代表第一位为常量，用做偏移)<br>在已知次数的情况下，笔者梯度下降准确率为98.99%（全局），100%（测试集）<br>所用权重为：</p></blockquote><figure class="highlight plaintext"><figcaption><span>Text</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Plain">a0=-1.414120707795622245e+01,b0=0<br>a1=9.836514438332992771e-01,b1=4<br>a2=2.380517972559514028e+00,b2=2<br>a3=7.800843335621133745e-01,b3=3<br>a4=-7.085426102987223196e+00,b4=1<br>a5=-1.099617181010096756e+00,b5=5<br>a6=3.408382709960854906e-01,b6=6<br></code></pre></td></tr></table></figure><hr><hr><blockquote><p><strong>初步想法和思路：</strong></p></blockquote><ul><li><p>思路一：暴力循环</p><ul><li><p>遍历次数所有可能，对每一可能下进行机器学习梯度下降确定系数</p></li><li><p>问题：</p><ul><li>复杂度过高：共计$10^6$种可能组合（可以做优化，但指数级别复杂度不变），对每一种可能做机器学习不现实（单次耗时约10s）</li></ul></li></ul></li><li><p>思路二：最简单，也是暂时唯一验证的可行方式：试！</p><ul><li><p>每一项拆开，即设Ni为Xi的指数，从1~10进行遍历，保持其他项不变（形如：$Y=a_0+a_1X^{n}_1+1<em>X_2+…+1</em>X_6$，或将系数设置为0等）,理应在符合目标时拥有最高的准确率。重复六次，完成对指数的确定后，再进行梯度下降对系数进行学习。这种方式最多只需要60次确定指数。</p></li><li><p>问题</p><ul><li><p>一：如果不存在最高项次数小于10这一条件，我们无从谈起</p></li><li><p>二：实际上，对于形如这样的多项式Z = X+Y+T，排除Y和T，仅仅依靠离散点（如果连续或拥有无穷多样本点可行），我们无法证明Z和X之间满足什么关系（只看这两个变量很可能求出来没有相关性，如本题），即这种思路在数学逻辑上不完备，本题适用，可能在别的场景下不适用</p></li></ul></li><li><p>此外：</p><ul><li>此题适用，但必须说明，我们最终试验得到的最优取值，往往不止一个，我们会发现在某些特征的测试下，准确率非常接近，考虑到机器学习的误差，我们不能依靠细微的差距判断真正的次数，最终还需要再做判断</li></ul></li></ul></li><li><p>思路三：直接对全体进行梯度下降，学习a和b两个未知量</p><ul><li><p>问题：</p><ul><li><p>一：两者梯度交织，互相制约，互为约束条件</p></li><li><p>二：X取值含负数，这段无法求导，即没有梯度</p><ul><li>可以通过数据处理，全部映射为正数，但这会丢失一个重要数据：次数的奇偶性（Sigmoid函数看重正负而非绝对数值）</li></ul></li></ul></li></ul></li><li><p>思路四：指定系数，对指数梯度下降求解</p><ul><li><p>指定系数（如全为1），对$Y=a_0+X^{b_1}_1+X_2^{b_2}+…+X_6^{b_6}$这个函数进行梯度下降。大概率在指数与函数相同时准确率最高（我们认为指数比系数对结果影响更大）。</p></li><li><p>问题：</p><ul><li><p>一：X取值含负数，这段无法求导，更没有梯度一说</p><ul><li><p>可以通过数据处理，全部映射为正数，但这会丢失一个重要数据：次数的奇偶性（Sigmoid函数看重正负而非绝对数值）</p></li><li><p>实际测试结果结果相差过大，与实际几乎无关系</p></li></ul></li><li><p>二：系数怎么指定？</p><ul><li>全为1一定不会有好结果，如上所述，这会忽略特征的正负性，这对Sigmoid非常重要</li></ul></li></ul></li><li><p>分析：</p><blockquote><p>这种方法几乎一定有问题，不考虑学习率、次数为整数等细节，单从逻辑三段论上说，我们的假设“指数比系数对结果影响更大”这一条本身就有问题，我们的特征取值本身较小（-2,2），而实际上系数存在14以上的数值，在很多情况下“指数不比系数对结果影响大”</p></blockquote></li></ul></li><li><p>思路五：对三和四的结合优化</p><ul><li><p>先分析单一特征，得到正负相关性，在正负相关性的作用下进行如三的处理</p></li><li><p>问题：</p><ul><li>对于形如这样的多项式Z =X+Y+T，排除或固定Y和T，我们很可能发现证明Z和X之间满足什么关系，在Pearson相关性分析中，我们会发现他们不含有相关性（笔者认为主要原因是最终输出为0/1的离散点，对每一个特征每一个次方值测试全部“不相关”）</li></ul></li></ul></li></ul><blockquote><p><strong>分析：</strong></p></blockquote><ul><li><p>笔者认为，在判断次数这一问题上，主要难点在于我们使用的不是原始数据，而是经过了Sigmoid函数处理后的参数，Sigmoid函数将连续数据变为离散，这一步损失太大，也就直接导致了函数空间过大，相关性分析表示无相关性，否则我们完全可以直接最小二乘法拟合曲线……</p></li><li><p>可以尝试的想法：</p><ul><li><p>使用元学习单独对指数部分进行处理，因为已知为多项式函数，完全可以仿照现有模型自行仿造相似模型对元学习进行训练（不过如果采用这种方式，不如直接神经网络或深度学习让他直接输出0/1的结果……）</p></li><li><p>补充上述想法：有意义，他使得模型具有可解释性</p></li></ul></li></ul><hr><blockquote><p>后记：<br>本来以为是一个很简单的问题，没想到这么棘手，这几天推了好几遍公式，也尝试不同的数据处理和激活函数，但都不能解决本质问题……甚至还想过能不能将0/1倒推回离散的值（反正是可行解之一），也查了很多资料和文献，都没有发现想要的……现在做基础研究的成果比大热方向少太多了……之后会多看看数学方向，是否有更好的处理方法，在此留作记录</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>未解决</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SVM下条件极值计算无解情况探究</title>
    <link href="/2023/01/06/SVM%E4%B8%8B%E6%9D%A1%E4%BB%B6%E6%9E%81%E5%80%BC%E8%AE%A1%E7%AE%97%E6%97%A0%E8%A7%A3%E6%83%85%E5%86%B5%E6%8E%A2%E7%A9%B6/"/>
    <url>/2023/01/06/SVM%E4%B8%8B%E6%9D%A1%E4%BB%B6%E6%9E%81%E5%80%BC%E8%AE%A1%E7%AE%97%E6%97%A0%E8%A7%A3%E6%83%85%E5%86%B5%E6%8E%A2%E7%A9%B6/</url>
    
    <content type="html"><![CDATA[<blockquote><p>SVM下条件极值计算，二维坐标系下，偏导结果为两条平行直线致无解情况，原因探究</p></blockquote><h1 id="三点情况"><a href="#三点情况" class="headerlink" title="三点情况"></a>三点情况</h1><ul><li>结果：当且仅当三点共线时无解</li></ul><hr><ul><li><p>证明：</p><ul><li><p>设存在三点$(x_1,y_1),(x_2,y_2),(x_3,y_3)$，分别为positive，positive，negative，即有$\lambda_1=1,\lambda_2=1,\lambda_3=-1$ 和 $y_1+y_2=y_3$</p><p>$ \begin{equation}<br>\begin{split}<br>\mathcal{J}(\boldsymbol{\lambda})<br> &amp;=\frac{1}{2} \sum_{i=1}^N \sum_{j=1}^N \lambda_i \lambda_j y^{(i)} y^{(j)}\left(\boldsymbol{x}^{(i)}\right)^T \boldsymbol{x}^{(j)}-\sum_{i=1}^N \lambda_i\\<br>&amp;=1/2[(x_1^2+y_1^2) \lambda_1^2+(x_1x_2+y_1y_2)\lambda_1\lambda_2-(x_1x_3+y_1y_3)\lambda_1\lambda_3\\<br>&amp;\ \ +(x_2^2+y_2^2) \lambda_2^2+(x_1x_2+y_1y_2)\lambda_1\lambda_2-(x_2x_3+y_2y_3)\lambda_2\lambda_3\\<br>&amp;\ \ +(x_3^2+y_3^2) \lambda_3^2-(x_2x_3+y_2y_3)\lambda_2\lambda_3-(x_2x_3+y_2y_3)\lambda_1\lambda_3]\\<br>&amp;\ \ -\lambda_1-\lambda_2-\lambda_3\\<br>&amp;=1/2[(x_1^2+y_1^2) \lambda_1^2+(x_2^2+y_2^2) \lambda_2^2+(x_3^2+y_3^2) \lambda_3^2\\<br>&amp;\ \ +2(x_1x_2+y_1y_2)\lambda_1\lambda_2<br>+2(x_1x_3+y_1y_3)\lambda_1\lambda_3<br>-2(x_2x_3+y_2y_3)\lambda_2\lambda_3]\\<br>&amp;\ \ -\lambda_1-\lambda_2-\lambda_3\\<br>\end{split}<br>\end{equation} $</p><p>由 $y_1+y_2=y_3$，将$y_3$带入消去：</p><p>$\begin{equation}<br>\begin{split}<br>\mathcal{J}(\boldsymbol{\lambda})=&amp;1/2[(x_1^2+y_1^2+x_3^2+y_3^2-2x_1x_3-2y_1y_3)\lambda_1^2\\<br>&amp;+(x_2^2+y_2^2+x_3^2+y_3^2-2x_2x_3-2y_2y_3)\lambda_2^2\\<br>&amp;+2(x_3^2+y_3^2+x_1x_2+y_1y_2-x_1x_3-y_1y_3-x_2x_3-y_2y_3)\lambda_1\lambda_2]\\<br>&amp; -2\lambda_1-2\lambda_2\\<br>=&amp;1/2[((x_1-x_3)^2+(y_1-y_3)^2)\lambda_1^2\\<br>&amp;+((x_2-x_3)^2+(y_2-y_3)^2))\lambda_2^2\\<br>&amp;+2((x_3-x1)(x_3-x_2)+(y_3-y_1)(y_3-y_2))\lambda_1\lambda_2]\\<br>&amp; -2\lambda_1-2\lambda_2\\<br>\end{split}<br>\end{equation}$</p><p>对此分别对$\lambda_1，\lambda_2$求偏导</p><script type="math/tex; mode=display">\begin{equation}\begin{split}\frac{\partial \mathcal{J}(\lambda) }{ \partial \lambda_1} =& ((x_1-x_3)^2+(y_1-y_3)^2)\lambda_1\\+&[(x_3-x_1)(x_3-x_2)+(y_3-y_1)(y_3-y_2)]\lambda_2 -2\end{split}\end{equation}</script><p>$\begin{equation}<br>\begin{split}<br>\frac{\partial \mathcal{J}(\lambda) }{ \partial \lambda_2} =&amp; ((x_2-x_3)^2+(y_2-y_3)^2)\lambda_1\+&amp;[(x_3-x_1)(x_3-x_2)+(y_3-y_1)(y_3-y_2)]\lambda_1 -2<br>\end{split}<br>\end{equation}$</p><p>令式(3)(4)为0，可求出其条件极值，显然，当两式平行时无解。故令式(3)(4)为0，且斜率相等，联立求解可得：</p><p>$\begin{equation}<br>\begin{split}<br>\frac{y_3-y_1}{x_3-x_1}=\frac{y_3-y_2}{x_3-x_2}<br>\end{split}<br>\end{equation}$</p><p>上式表示过点1,3直线的斜率与过点2,3的直线的斜率相等，<strong>显然其三点共线</strong></p></li></ul></li><li><p>验证：</p><ul><li>以点(1,1)(2,2)(3,3)为例（三点共线），分别为positive，positive，negative</li></ul><p>$\begin{equation}<br>\begin{split}<br>\mathcal{J}(\boldsymbol{\lambda})=4\lambda_1^2+\lambda_2^2+4\lambda_1\lambda_2-2\lambda_1-2\lambda_2<br>\end{split}<br>\end{equation}$</p><p>$\begin{equation}<br>\begin{split}<br>\frac{\partial \mathcal{J}(\lambda) }{ \partial \lambda_1} =8\lambda_1+4\lambda_2-2<br>\end{split}<br>\end{equation}$</p><p>$\begin{equation}<br>\begin{split}<br>\frac{\partial \mathcal{J}(\lambda) }{ \partial \lambda_2} =4\lambda_1+2\lambda_2-2<br>\end{split}<br>\end{equation}$</p><p>两式平行，无解</p></li></ul><h1 id="四点情况"><a href="#四点情况" class="headerlink" title="四点情况"></a>四点情况</h1><ul><li><p>结果：一定无解</p></li><li><p>证明：</p><ul><li>设存在三点$(x_1,y_1),(x_2,y_2),(x_3,y_3),(x_4,y_4)$，分别为positive，positive，negative，negative，即有$\lambda_1=1,\lambda_2=1,\lambda_3=-1,\lambda_4=-1$ 和 $y_1+y_2=y_3+y_4$（计算方式同上，具体计算细节见附录）</li><li>为计算简洁，另$X_{ij}=x_i-x_j,Y_{ij}=y_i-y_j$，这里消去$\lambda_4$</li><li>分别对$\lambda_1，\lambda_2，\lambda_3$求偏导</li></ul><p>$\begin{equation}<br>\begin{split}<br>\frac{\partial \mathcal{J}(\lambda) }{ \partial \lambda_1} =&amp; (X_{14}^2+Y_{14}^2)\lambda_1+(X_{14}X_{24}+Y_{14}Y_{24})\lambda_2-(X_{14}X_{34}+Y_{14}Y_{34})\lambda_3-2<br>\end{split}<br>\end{equation}$</p><p>$\begin{equation}<br>\begin{split}<br>\frac{\partial \mathcal{J}(\lambda) }{ \partial \lambda_2} =&amp; (X_{24}^2+Y_{24}^2)\lambda_2+(X_{14}X_{24}+Y_{14}Y_{24})\lambda_1-(X_{24}X_{34}+Y_{24}Y_{34})\lambda_3-2<br>\end{split}<br>\end{equation}$</p><p>\begin{equation}<br>\begin{split}<br>\frac{\partial \mathcal{J}(\lambda) }{ \partial \lambda_3} =&amp; (X_{34}^2+Y_{34}^2)\lambda_3-(X_{14}X_{34}+Y_{14}Y_{34})\lambda_1-(X_{24}X_{34}+Y_{24}Y_{34})\lambda_2-2<br>\end{split}<br>\end{equation}$</p><p>使用系数行列式：</p><p>$\left |\begin{array}{cccc}<br>X_{14}^2+Y_{14}^2 &amp;X_{14}X_{24}+Y_{14}Y_{24}   &amp; -(X_{14}X_{34}+Y_{14}Y_{34}) \\<br>X_{14}X_{24}+Y_{14}Y_{24} &amp;X_{24}^2+Y_{24}^2 &amp; -(X_{14}X_{34}+Y_{14}Y_{34})  \\<br>-(X_{14}X_{34}+Y_{14}Y_{34}) &amp; -(X_{24}X_{34}+Y_{24}Y_{34}) &amp;X_{34}^2+Y_{34}^2 \\<br>\end{array}\right|$</p><p>上式计算后结果为0，即函数无解（具体计算方式为，第二三行分别减去第一行的倍数消去$\lambda_1$,得到仅含$\lambda_2，\lambda_3$的两个计算式，这两式平行，斜率如下，计算细节见附录）</p><p>$\begin{equation}<br>\begin{split}<br>\frac{X_{14}Y_{24}-X_{24}Y_{14}}{X_{14}Y_{14}-X_{14}Y_{34}}<br>\end{split}<br>\end{equation}$</p><blockquote><p>综上所述，其一定求出结果为无解</p></blockquote></li></ul><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p><img src="https://picture-for-mark.oss-cn-hangzhou.aliyuncs.com/img/IMG_20221102_220253.jpg" alt="IMG_20221102_220253"></p><blockquote><p>上式计算并消去$\lambda_4$进行求导</p></blockquote><p><img src="https://picture-for-mark.oss-cn-hangzhou.aliyuncs.com/img/IMG_20221102_220348.jpg" alt="IMG_20221102_220348"></p><blockquote><p>上式计算一个式子的斜率，另一边方法相同</p></blockquote><hr><blockquote><p>关于“无解”的数学解释：</p></blockquote><ul><li><p>在限定条件取值范围内不存在极值点，从二维坐标系来看指函数单调，即仅存在边界处的最值点</p></li><li><p>从直觉上感觉，所使用的点越多，$\lambda$之间交织的限制越严格，越难以得到可行解，如使用两个点一定有解，三点仅在共线时无解，四点始终无解（猜测5及以后也无解……~）</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
